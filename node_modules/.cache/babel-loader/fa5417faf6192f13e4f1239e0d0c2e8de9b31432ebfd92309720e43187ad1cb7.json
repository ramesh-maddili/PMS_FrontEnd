{"ast":null,"code":"import Vue from 'vue';\nimport Router from 'vue-router';\nimport Login from '../views/UserLogin.vue';\nimport Products from '../views/UserProducts.vue';\nimport Summary from '../views/UserSummary.vue';\nimport NotFound from '../views/NotFound.vue';\nVue.use(Router);\nconst router = new Router({\n  mode: 'history',\n  routes: [{\n    path: '/register',\n    name: 'Register',\n    component: () => import('../views/UserRegister.vue')\n  }, {\n    path: '/',\n    redirect: '/products'\n  }, {\n    path: '/login',\n    component: Login\n  }, {\n    path: '/products',\n    component: Products\n  }, {\n    path: '/summary',\n    component: Summary\n  }, {\n    path: '*',\n    component: NotFound\n  }]\n});\n\n// Route Guard\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  const role = localStorage.getItem('role');\n\n  // Skip guard for public pages\n  if (to.path === '/login' || to.path === '/register') {\n    return next();\n  }\n\n  // Require auth for other pages\n  if (!token) {\n    return next('/login');\n  }\n\n  // Restrict access to summary for non-admins\n  if (to.path === '/summary' && role !== 'Admin') {\n    return next('/products');\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","Login","Products","Summary","NotFound","use","router","mode","routes","path","name","component","redirect","beforeEach","to","from","next","token","localStorage","getItem","role"],"sources":["C:/Users/FL_LPT-746/product-management-system-frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Login from '../views/UserLogin.vue'\r\nimport Products from '../views/UserProducts.vue'\r\nimport Summary from '../views/UserSummary.vue'\r\nimport NotFound from '../views/NotFound.vue'\r\n\r\nVue.use(Router)\r\n\r\nconst router = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    {path: '/register', name: 'Register', component: () => import('../views/UserRegister.vue')},\r\n    { path: '/', redirect: '/products' },\r\n    { path: '/login', component: Login },\r\n    { path: '/products', component: Products },\r\n    { path: '/summary', component: Summary },\r\n    { path: '*', component: NotFound }\r\n  ]\r\n})\r\n\r\n// Route Guard\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = localStorage.getItem('token')\r\n  const role = localStorage.getItem('role')\r\n\r\n  // Skip guard for public pages\r\n  if (to.path === '/login' || to.path === '/register') {\r\n    return next()\r\n  }\r\n\r\n  // Require auth for other pages\r\n  if (!token) {\r\n    return next('/login')\r\n  }\r\n\r\n  // Restrict access to summary for non-admins\r\n  if (to.path === '/summary' && role !== 'Admin') {\r\n    return next('/products')\r\n  }\r\n\r\n  next()\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5CL,GAAG,CAACM,GAAG,CAACL,MAAM,CAAC;AAEf,MAAMM,MAAM,GAAG,IAAIN,MAAM,CAAC;EACxBO,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE,CACN;IAACC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE,UAAU;IAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B;EAAC,CAAC,EAC3F;IAAEF,IAAI,EAAE,GAAG;IAAEG,QAAQ,EAAE;EAAY,CAAC,EACpC;IAAEH,IAAI,EAAE,QAAQ;IAAEE,SAAS,EAAEV;EAAM,CAAC,EACpC;IAAEQ,IAAI,EAAE,WAAW;IAAEE,SAAS,EAAET;EAAS,CAAC,EAC1C;IAAEO,IAAI,EAAE,UAAU;IAAEE,SAAS,EAAER;EAAQ,CAAC,EACxC;IAAEM,IAAI,EAAE,GAAG;IAAEE,SAAS,EAAEP;EAAS,CAAC;AAEtC,CAAC,CAAC;;AAEF;AACAE,MAAM,CAACO,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;EAEzC;EACA,IAAIL,EAAE,CAACL,IAAI,KAAK,QAAQ,IAAIK,EAAE,CAACL,IAAI,KAAK,WAAW,EAAE;IACnD,OAAOO,IAAI,CAAC,CAAC;EACf;;EAEA;EACA,IAAI,CAACC,KAAK,EAAE;IACV,OAAOD,IAAI,CAAC,QAAQ,CAAC;EACvB;;EAEA;EACA,IAAIF,EAAE,CAACL,IAAI,KAAK,UAAU,IAAIW,IAAI,KAAK,OAAO,EAAE;IAC9C,OAAOJ,IAAI,CAAC,WAAW,CAAC;EAC1B;EAEAA,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}