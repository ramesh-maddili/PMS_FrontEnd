{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\nVue.config.productionTip = false;\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Add token to every request\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Optional: Auto-refresh token on 401\naxios.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response?.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      const res = await axios.post('/refresh-token', {\n        refreshToken\n      });\n      const newToken = res.data.token;\n      localStorage.setItem('token', newToken);\n      originalRequest.headers.Authorization = `Bearer ${newToken}`;\n      return axios(originalRequest);\n    } catch (refreshError) {\n      localStorage.clear();\n      window.location = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nVue.prototype.$http = axios;\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","axios","config","productionTip","defaults","baseURL","interceptors","request","use","token","localStorage","getItem","headers","Authorization","response","error","originalRequest","status","_retry","refreshToken","res","post","newToken","data","setItem","refreshError","clear","window","location","Promise","reject","prototype","$http","render","h","$mount"],"sources":["C:/Users/FL_LPT-746/product-management-system-frontend/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios'\n\nVue.config.productionTip = false\n\naxios.defaults.baseURL = 'http://localhost:5000'\n\n// Add token to every request\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n})\n\n// Optional: Auto-refresh token on 401\naxios.interceptors.response.use(\n  response => response,\n  async error => {\n    const originalRequest = error.config\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true\n      try {\n        const refreshToken = localStorage.getItem('refreshToken')\n        const res = await axios.post('/refresh-token', { refreshToken })\n        const newToken = res.data.token\n\n        localStorage.setItem('token', newToken)\n        originalRequest.headers.Authorization = `Bearer ${newToken}`\n\n        return axios(originalRequest)\n      } catch (refreshError) {\n        localStorage.clear()\n        window.location = '/login'\n      }\n    }\n\n    return Promise.reject(error)\n  }\n)\n\nVue.prototype.$http = axios\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app')\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAEzBH,GAAG,CAACI,MAAM,CAACC,aAAa,GAAG,KAAK;AAEhCF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACAJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACN,MAAM,IAAI;EACvC,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTP,MAAM,CAACU,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOP,MAAM;AACf,CAAC,CAAC;;AAEF;AACAD,KAAK,CAACK,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC7BM,QAAQ,IAAIA,QAAQ,EACpB,MAAMC,KAAK,IAAI;EACb,MAAMC,eAAe,GAAGD,KAAK,CAACb,MAAM;EAEpC,IAAIa,KAAK,CAACD,QAAQ,EAAEG,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,YAAY,GAAGT,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAMS,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,gBAAgB,EAAE;QAAEF;MAAa,CAAC,CAAC;MAChE,MAAMG,QAAQ,GAAGF,GAAG,CAACG,IAAI,CAACd,KAAK;MAE/BC,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;MACvCN,eAAe,CAACJ,OAAO,CAACC,aAAa,GAAG,UAAUS,QAAQ,EAAE;MAE5D,OAAOrB,KAAK,CAACe,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOS,YAAY,EAAE;MACrBf,YAAY,CAACgB,KAAK,CAAC,CAAC;MACpBC,MAAM,CAACC,QAAQ,GAAG,QAAQ;IAC5B;EACF;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACf,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDjB,GAAG,CAACiC,SAAS,CAACC,KAAK,GAAG/B,KAAK;AAE3B,IAAIH,GAAG,CAAC;EACNE,MAAM;EACNiC,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACnC,GAAG;AACpB,CAAC,CAAC,CAACoC,MAAM,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}