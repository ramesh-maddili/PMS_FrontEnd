{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\nVue.config.productionTip = false;\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Request interceptor\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Optional: Response interceptor for handling 401 errors\naxios.interceptors.response.use(response => response, error => {\n  if (error.response?.status === 401) {\n    console.warn('Unauthorized - token may be expired');\n    // Optional: clear localStorage or redirect to login\n    // localStorage.clear()\n    // window.location = '/login'\n  }\n  return Promise.reject(error);\n});\n\n// Make axios available globally (optional)\nVue.prototype.$http = axios;\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","axios","config","productionTip","defaults","baseURL","interceptors","request","use","token","localStorage","getItem","headers","Authorization","response","error","status","console","warn","Promise","reject","prototype","$http","render","h","$mount"],"sources":["C:/Users/FL_LPT-746/product-management-system-frontend/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios'\n\nVue.config.productionTip = false\n\naxios.defaults.baseURL = 'http://localhost:5000'\n\n// Request interceptor\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n})\n\n// Optional: Response interceptor for handling 401 errors\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response?.status === 401) {\n      console.warn('Unauthorized - token may be expired');\n      // Optional: clear localStorage or redirect to login\n      // localStorage.clear()\n      // window.location = '/login'\n    }\n    return Promise.reject(error)\n  }\n)\n\n// Make axios available globally (optional)\nVue.prototype.$http = axios\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app')\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAEzBH,GAAG,CAACI,MAAM,CAACC,aAAa,GAAG,KAAK;AAEhCF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACAJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACN,MAAM,IAAI;EACvC,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTP,MAAM,CAACU,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOP,MAAM;AACf,CAAC,CAAC;;AAEF;AACAD,KAAK,CAACK,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC7BM,QAAQ,IAAIA,QAAQ,EACpBC,KAAK,IAAI;EACP,IAAIA,KAAK,CAACD,QAAQ,EAAEE,MAAM,KAAK,GAAG,EAAE;IAClCC,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAC;IACnD;IACA;IACA;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,GAAG,CAACuB,SAAS,CAACC,KAAK,GAAGrB,KAAK;AAE3B,IAAIH,GAAG,CAAC;EACNE,MAAM;EACNuB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACzB,GAAG;AACpB,CAAC,CAAC,CAAC0B,MAAM,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}