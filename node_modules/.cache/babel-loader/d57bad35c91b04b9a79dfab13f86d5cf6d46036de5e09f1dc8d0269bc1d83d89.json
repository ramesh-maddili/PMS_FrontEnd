{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [],\n      newProduct: {\n        name: '',\n        price: '',\n        category: ''\n      },\n      role: localStorage.getItem('role')\n    };\n  },\n  created() {\n    this.getProducts();\n  },\n  methods: {\n    async getProducts() {\n      const res = await axios.get('/products');\n      this.products = res.data;\n    },\n    async addProduct() {\n      const name = this.newProduct.name; // capture before reset\n      await axios.post('/products', this.newProduct);\n      alert(`✅ Product \"${name}\" added successfully!`);\n      this.newProduct = {\n        name: '',\n        price: '',\n        category: ''\n      };\n      this.getProducts();\n    },\n    async updateProduct() {\n      if (!this.newProduct._id) return;\n      try {\n        await axios.put(`/products/${this.newProduct._id}`, {\n          name: this.newProduct.name,\n          price: this.newProduct.price,\n          category: this.newProduct.category\n        });\n        this.newProduct = {\n          name: '',\n          price: '',\n          category: ''\n        };\n        this.getProducts();\n        alert('✅ Product updated successfully!');\n      } catch (err) {\n        console.error(\"❌ Update failed:\", err.response?.data?.message || err.message);\n      }\n    },\n    async deleteProduct(id) {\n      const deletedProductName = this.products.find(product => product._id === id);\n      await axios.delete(`/products/${id}`);\n      alert(`✅ Product \"${deletedProductName?.name}\" deleted successfully!`);\n      this.getProducts();\n    },\n    editProduct(product) {\n      this.newProduct = {\n        ...product\n      };\n    },\n    cancelEdit() {\n      this.newProduct = {\n        name: '',\n        price: '',\n        category: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","newProduct","name","price","category","role","localStorage","getItem","created","getProducts","methods","res","get","addProduct","post","alert","updateProduct","_id","put","err","console","error","response","message","deleteProduct","id","deletedProductName","find","product","delete","editProduct","cancelEdit"],"sources":["src/views/UserProducts.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <h2>Product List</h2>\r\n    <div v-if=\"role === 'Admin'\">\r\n        <input v-model=\"newProduct.name\" placeholder=\"Name\" />\r\n        <input v-model=\"newProduct.price\" type=\"number\" placeholder=\"Price\" />\r\n        <input v-model=\"newProduct.category\" placeholder=\"Category\" />\r\n        <button v-if=\"!newProduct._id\" @click=\"addProduct\">Add Product</button>\r\n        <button v-else @click=\"updateProduct\">Update Product</button>\r\n        <button @click=\"cancelEdit\">Cancel</button>\r\n\r\n    </div>\r\n\r\n    <div v-for=\"product in products\" :key=\"product._id\">\r\n        <p>{{ product.name }} - ₹{{ product.price }} ({{ product.category }})</p>\r\n        <div v-if=\"role === 'Admin'\">\r\n            <button @click=\"editProduct(product)\">Edit</button>\r\n            <button @click=\"deleteProduct(product._id)\">Delete</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    data() {\r\n        return {\r\n            products: [],\r\n            newProduct: {\r\n                name: '',\r\n                price: '',\r\n                category: ''\r\n            },\r\n            role: localStorage.getItem('role')\r\n        }\r\n    },\r\n    created() {\r\n        this.getProducts()\r\n    },\r\n    methods: {\r\n        async getProducts() {\r\n            const res = await axios.get('/products')\r\n            this.products = res.data\r\n        },\r\n        async addProduct() {\r\n          const name = this.newProduct.name; // capture before reset\r\n            await axios.post('/products', this.newProduct)\r\n            alert(`✅ Product \"${name}\" added successfully!`);\r\n            this.newProduct = {\r\n                name: '',\r\n                price: '',\r\n                category: ''\r\n            }\r\n            this.getProducts()\r\n        },\r\n        async updateProduct() {\r\n            if (!this.newProduct._id) return;\r\n\r\n            try {\r\n                await axios.put(`/products/${this.newProduct._id}`, {\r\n                    name: this.newProduct.name,\r\n                    price: this.newProduct.price,\r\n                    category: this.newProduct.category\r\n                });\r\n                this.newProduct = {\r\n                    name: '',\r\n                    price: '',\r\n                    category: ''\r\n                };\r\n                this.getProducts();\r\n                alert('✅ Product updated successfully!')\r\n\r\n            } catch (err) {\r\n                console.error(\"❌ Update failed:\", err.response?.data?.message || err.message);\r\n            }\r\n        },\r\n        async deleteProduct(id) {\r\n          const deletedProductName = this.products.find(product=> product._id ===id)\r\n            await axios.delete(`/products/${id}`)\r\n            alert(`✅ Product \"${deletedProductName?.name}\" deleted successfully!`)\r\n            this.getProducts()\r\n        },\r\n        editProduct(product) {\r\n            this.newProduct = {\r\n                ...product\r\n            }\r\n        },\r\n        cancelEdit() {\r\n            this.newProduct = {\r\n                name: '',\r\n                price: '',\r\n                category: ''\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";;AAwBA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA,MAAAD,YAAA;MACA,MAAAE,GAAA,SAAAb,KAAA,CAAAc,GAAA;MACA,KAAAZ,QAAA,GAAAW,GAAA,CAAAZ,IAAA;IACA;IACA,MAAAc,WAAA;MACA,MAAAX,IAAA,QAAAD,UAAA,CAAAC,IAAA;MACA,MAAAJ,KAAA,CAAAgB,IAAA,mBAAAb,UAAA;MACAc,KAAA,eAAAb,IAAA;MACA,KAAAD,UAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACA,KAAAK,WAAA;IACA;IACA,MAAAO,cAAA;MACA,UAAAf,UAAA,CAAAgB,GAAA;MAEA;QACA,MAAAnB,KAAA,CAAAoB,GAAA,mBAAAjB,UAAA,CAAAgB,GAAA;UACAf,IAAA,OAAAD,UAAA,CAAAC,IAAA;UACAC,KAAA,OAAAF,UAAA,CAAAE,KAAA;UACAC,QAAA,OAAAH,UAAA,CAAAG;QACA;QACA,KAAAH,UAAA;UACAC,IAAA;UACAC,KAAA;UACAC,QAAA;QACA;QACA,KAAAK,WAAA;QACAM,KAAA;MAEA,SAAAI,GAAA;QACAC,OAAA,CAAAC,KAAA,qBAAAF,GAAA,CAAAG,QAAA,EAAAvB,IAAA,EAAAwB,OAAA,IAAAJ,GAAA,CAAAI,OAAA;MACA;IACA;IACA,MAAAC,cAAAC,EAAA;MACA,MAAAC,kBAAA,QAAA1B,QAAA,CAAA2B,IAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAX,GAAA,KAAAQ,EAAA;MACA,MAAA3B,KAAA,CAAA+B,MAAA,cAAAJ,EAAA;MACAV,KAAA,eAAAW,kBAAA,EAAAxB,IAAA;MACA,KAAAO,WAAA;IACA;IACAqB,YAAAF,OAAA;MACA,KAAA3B,UAAA;QACA,GAAA2B;MACA;IACA;IACAG,WAAA;MACA,KAAA9B,UAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}