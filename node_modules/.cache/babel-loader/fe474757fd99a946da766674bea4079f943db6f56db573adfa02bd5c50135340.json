{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\nVue.config.productionTip = false;\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Request interceptor\n// Token refresh interceptor (optional)\naxios.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response?.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      const res = await axios.post('/refresh-token', {\n        refreshToken\n      });\n      const newToken = res.data.token;\n      localStorage.setItem('token', newToken);\n\n      // Update the original request with new token\n      originalRequest.headers.Authorization = `Bearer ${newToken}`;\n      return axios(originalRequest); // Retry the original request\n    } catch (refreshError) {\n      console.error('Refresh token failed:', refreshError.message);\n      localStorage.clear();\n      window.location = '/login';\n    }\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["Vue","App","router","axios","config","productionTip","defaults","baseURL","interceptors","response","use","error","originalRequest","status","_retry","refreshToken","localStorage","getItem","res","post","newToken","data","token","setItem","headers","Authorization","refreshError","console","message","clear","window","location","Promise","reject"],"sources":["C:/Users/FL_LPT-746/product-management-system-frontend/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport axios from 'axios'\n\nVue.config.productionTip = false\n\naxios.defaults.baseURL = 'http://localhost:5000'\n\n// Request interceptor\n// Token refresh interceptor (optional)\naxios.interceptors.response.use(\n  response => response,\n  async error => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        const res = await axios.post('/refresh-token', { refreshToken });\n\n        const newToken = res.data.token;\n        localStorage.setItem('token', newToken);\n\n        // Update the original request with new token\n        originalRequest.headers.Authorization = `Bearer ${newToken}`;\n        return axios(originalRequest); // Retry the original request\n      } catch (refreshError) {\n        console.error('Refresh token failed:', refreshError.message);\n        localStorage.clear();\n        window.location = '/login';\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAEzBH,GAAG,CAACI,MAAM,CAACC,aAAa,GAAG,KAAK;AAEhCF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACA;AACAJ,KAAK,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ,EACpB,MAAME,KAAK,IAAI;EACb,MAAMC,eAAe,GAAGD,KAAK,CAACP,MAAM;EAEpC,IAAIO,KAAK,CAACF,QAAQ,EAAEI,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,gBAAgB,EAAE;QAAEJ;MAAa,CAAC,CAAC;MAEhE,MAAMK,QAAQ,GAAGF,GAAG,CAACG,IAAI,CAACC,KAAK;MAC/BN,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAAC;;MAEvC;MACAR,eAAe,CAACY,OAAO,CAACC,aAAa,GAAG,UAAUL,QAAQ,EAAE;MAC5D,OAAOjB,KAAK,CAACS,eAAe,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOc,YAAY,EAAE;MACrBC,OAAO,CAAChB,KAAK,CAAC,uBAAuB,EAAEe,YAAY,CAACE,OAAO,CAAC;MAC5DZ,YAAY,CAACa,KAAK,CAAC,CAAC;MACpBC,MAAM,CAACC,QAAQ,GAAG,QAAQ;IAC5B;EACF;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACtB,KAAK,CAAC;AAC9B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}