{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nexport default {\n  props: ['role'],\n  data() {\n    return {\n      products: [],\n      newProduct: {\n        name: '',\n        price: '',\n        category: ''\n      }\n    };\n  },\n  mounted() {\n    this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      const res = await axios.get('/products');\n      this.products = res.data;\n    },\n    async addProduct() {\n      if (!this.newProduct.name || !this.newProduct.price || !this.newProduct.category) return;\n      await axios.post('/products', this.newProduct);\n      alert(`‚úÖ Product \"${this.newProduct.name}\" added successfully!`);\n      this.newProduct = {\n        name: '',\n        price: '',\n        category: ''\n      };\n      this.fetchProducts();\n    },\n    async deleteProduct(id) {\n      const deletedProduct = this.products.find(p => p._id === id);\n      await axios.delete(`/products/${id}`);\n      alert(`üóëÔ∏è Deleted \"${deletedProduct?.name}\"`);\n      this.fetchProducts();\n    }\n  }\n};","map":{"version":3,"names":["axios","props","data","products","newProduct","name","price","category","mounted","fetchProducts","methods","res","get","addProduct","post","alert","deleteProduct","id","deletedProduct","find","p","_id","delete"],"sources":["src/views/UserProducts.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-container\">\r\n    <h2>Product List</h2>\r\n\r\n    <!-- Admin can add product -->\r\n<div v-if=\"role === 'Admin'\" class=\"form-box\">\r\n  <input v-model=\"newProduct.name\" placeholder=\"Product Name\" />\r\n  <input v-model=\"newProduct.price\" type=\"number\" placeholder=\"Price (‚Çπ)\" />\r\n  <input v-model=\"newProduct.category\" placeholder=\"Category\" />\r\n  <button @click=\"addProduct\">Submit</button>\r\n</div>\r\n\r\n\r\n    <!-- Product List -->\r\n    <ul>\r\n      <li v-for=\"product in products\" :key=\"product._id\">\r\n        <strong>{{ product.name }}</strong> - ‚Çπ{{ product.price }} ({{ product.category }})\r\n\r\n        <!-- Admin can delete -->\r\n        <button v-if=\"role === 'Admin'\" @click=\"deleteProduct(product._id)\">Delete</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  props: ['role'],\r\n  data() {\r\n    return {\r\n      products: [],\r\n      newProduct: {\r\n        name: '',\r\n        price: '',\r\n        category: ''\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchProducts()\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      const res = await axios.get('/products')\r\n      this.products = res.data\r\n    },\r\n    async addProduct() {\r\n      if (!this.newProduct.name || !this.newProduct.price || !this.newProduct.category) return\r\n      await axios.post('/products', this.newProduct)\r\n      alert(`‚úÖ Product \"${this.newProduct.name}\" added successfully!`)\r\n      this.newProduct = { name: '', price: '', category: '' }\r\n      this.fetchProducts()\r\n    },\r\n    async deleteProduct(id) {\r\n      const deletedProduct = this.products.find(p => p._id === id)\r\n      await axios.delete(`/products/${id}`)\r\n      alert(`üóëÔ∏è Deleted \"${deletedProduct?.name}\"`)\r\n      this.fetchProducts()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.product-container {\r\n  max-width: 600px;\r\n  margin: auto;\r\n  background: #ffffff;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-box input {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.button-group {\r\n  margin-top: 10px;\r\n}\r\n\r\n.button-group button,\r\n.action-buttons button {\r\n  margin-right: 10px;\r\n  margin-top: 10px;\r\n  padding: 8px 14px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\nbutton {\r\n  background-color: #2ecc71;\r\n  color: white;\r\n}\r\n\r\n.cancel {\r\n  background-color: #bdc3c7;\r\n  color: #2c3e50;\r\n}\r\n\r\n.edit {\r\n  background-color: #3498db;\r\n  color: white;\r\n}\r\n\r\n.delete {\r\n  background-color: #e74c3c;\r\n  color: white;\r\n}\r\n\r\n.product-item {\r\n  border-bottom: 1px solid #eee;\r\n  padding: 15px 0;\r\n}\r\n\r\n.product-item p {\r\n  margin: 0;\r\n  font-size: 16px;\r\n}\r\n</style>\r\n"],"mappings":";;AAyBA,OAAAA,KAAA;AACA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA,MAAAD,cAAA;MACA,MAAAE,GAAA,SAAAX,KAAA,CAAAY,GAAA;MACA,KAAAT,QAAA,GAAAQ,GAAA,CAAAT,IAAA;IACA;IACA,MAAAW,WAAA;MACA,UAAAT,UAAA,CAAAC,IAAA,UAAAD,UAAA,CAAAE,KAAA,UAAAF,UAAA,CAAAG,QAAA;MACA,MAAAP,KAAA,CAAAc,IAAA,mBAAAV,UAAA;MACAW,KAAA,oBAAAX,UAAA,CAAAC,IAAA;MACA,KAAAD,UAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA;MACA,KAAAE,aAAA;IACA;IACA,MAAAO,cAAAC,EAAA;MACA,MAAAC,cAAA,QAAAf,QAAA,CAAAgB,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,KAAAJ,EAAA;MACA,MAAAjB,KAAA,CAAAsB,MAAA,cAAAL,EAAA;MACAF,KAAA,iBAAAG,cAAA,EAAAb,IAAA;MACA,KAAAI,aAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}